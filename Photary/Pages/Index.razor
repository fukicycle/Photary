@page "/"
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
@inject NavigationManager _navigationManager
@inject HttpClient _client

<PageTitle>Index</PageTitle>
<div class="h-100 d-flex flex-column">
    <div class="header">

    </div>
    <div class="main-content m-auto">
        @test
    </div>
    <div class="menu">
        <div class="menu-content">
            <button class="btn btn-menu" @onclick="(() => MenuButtonOnClick(0))">
                <ButtonIcon Type="0" IsSelected="selectedMenu[0]"></ButtonIcon>
            </button>
            <button class="btn btn-menu" @onclick="(() => MenuButtonOnClick(1))">
                <ButtonIcon Type="1" IsSelected="selectedMenu[1]"></ButtonIcon>
            </button>
            <button class="btn btn-menu" @onclick="(() => MenuButtonOnClick(2))">
                <ButtonIcon Type="2" IsSelected="selectedMenu[2]"></ButtonIcon>
            </button>
        </div>
    </div>
</div>
@code{
    private bool[] selectedMenu = new bool[3] { true, false, false };
    private string? test = "test";

    protected override async Task OnInitializedAsync()
    {
        string? token = await _localStorage.GetItemAsStringAsync("TOKEN");
        if (string.IsNullOrEmpty(token))
        {
            _navigationManager.NavigateTo("login");
            return;
        }
        _client.DefaultRequestHeaders.Add("Authorization", $"Bearer {token}");
        HttpResponseMessage res = await _client.GetAsync("Users");
        if (res.IsSuccessStatusCode)
        {
            UserResponseDto? user = await res.Content.ReadFromJsonAsync<UserResponseDto>();
            test = user?.NickName;
            StateHasChanged();
        }
    }

    private void MenuButtonOnClick(int type)
    {
        for (int i = 0; i < selectedMenu.Length; i++)
        {
            selectedMenu[i] = false;
        }
        selectedMenu[type] = true;
        StateHasChanged();
    }
}